PROCEDURE swap(var xp,var yp:INTEGER)
VAR
    temp:INTEGER;
BEGIN
    temp:=xp;
    xp:=yp;
    yp:=temp;
END
// PROCEDURE triabulle(var tab : ARRAY_OF INTEGER)

// VAR
//     i,j,n:INTEGER;
// BEGIN
//     n:=tab.length;
//     FOR i FROM 0 TO n-2 STEP 1  DO
//         FOR j FROM 0 TO n-i-2 STEP 1  DO
//             IF (tab[j]>tab[j+1]) THEN
//                 swap(tab[j],tab[j+1]);
//             END_IF
//         END_FOR
//     END_FOR
// END
PROCEDURE triselection(var tab : ARRAY_OF INTEGER)

VAR
    i,j,min_idx,n:INTEGER;
BEGIN
    n:=tab.length;
    FOR i FROM 0 TO n-2  DO
        min_idx:=i;
        FOR j FROM i+1 TO n-1 DO
            IF (tab[j]< tab[min_idx]) THEN
                min_idx:=j;
            END_IF
        END_FOR
        swap(tab[min_idx],tab[i]);
    END_FOR
END
ALGORITHM insertion
VAR
    tab : ARRAY_OF INTEGER[];
    tab2 : ARRAY_OF INTEGER[];
    carte:INTEGER;
BEGIN
    FOR i FROM 0 TO tab2.length  DO
        carte:=tab2[i];
        tab[i]:=carte;
            IF (i>1) THEN
                triselection(tab[i]);
                // triabulle(tab[i]);
            END_IF
    END_FOR
